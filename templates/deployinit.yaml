apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-cve-processor
  namespace: {{.Values.webapp.namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Release.Name}}-cve-processor
  template:
    metadata:
      labels:
        app: {{.Release.Name}}-cve-processor
    spec:
      imagePullSecrets:
        - name: {{.Release.Name}}-docker-secret
      containers:
        - name: db-migration
          image: {{.Values.db.image}}
          command: ["flyway", "migrate"]
          env:
            - name: FLYWAY_URL
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-db-config
                  key: FLYWAY_URL
            - name: FLYWAY_USER
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-db-config
                  key: FLYWAY_USER
            - name: FLYWAY_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-db-config
                  key: FLYWAY_PASSWORD
            - name: FLYWAY_SCHEMAS
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-db-config
                  key: FLYWAY_SCHEMAS
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
        - name: consumer
          image: {{.Values.webapp.image}}
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-db-config
                  key: WEBAPP_DB_URL
            - name: KAFKA_BROKER_ADDRESSES
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-kafka-config
                  key: KAFKA_BROKER_ADDRESSES
            - name: KAFKA_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-kafka-config
                  key: KAFKA_TOPIC
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "/app/readiness"
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20

